{"version":3,"sources":["./src/app/categories/category.service.ts","./src/app/delivery-boy/delivery-boy.service.ts","./src/app/orders/orders.model.ts","./src/app/pages/login/auth.service.ts","./src/app/pos/pos.model.ts","./src/app/sub-category/sub-category.service.ts","./src/app/users/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../service/crud.service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class CategoryService {\n\tconstructor(private crud: CrudService) {\n\t}\n\n\t// Get all category\n\tpublic getAll(page: number, limit: number, search?: string): Observable<any> {\n\t\treturn this.crud.getData(`/categories/admin/list?page=${page}&limit=${limit}&q=${search}`);\n\t}\n\n\t// Get all category for dropdown\n\tpublic getAllEnabled(): Observable<any> {\n\t\treturn this.crud.getData('/categories/admin/dropdown-list');\n\t}\n\n\t// Get category by Id\n\tpublic getById(categoryId: string): Observable<any> {\n\t\treturn this.crud.getData(`/categories/admin/detail/${categoryId}`);\n\t}\n\n\t// Create category\n\tpublic save(categoryData): Observable<any> {\n\t\treturn this.crud.saveData('/categories/admin/create', categoryData);\n\t}\n\n\t// Update category\n\tpublic update(categoryId: string, categoryData): Observable<any> {\n\t\treturn this.crud.updateData(`/categories/admin/update/${categoryId}`, categoryData);\n\t}\n\n\t// Updates category status\n\tpublic updateStatus(categoryId: string, categoryData): Observable<any> {\n\t\treturn this.crud.updateData(`/categories/admin/status-update/${categoryId}`, categoryData);\n\t}\n\n\t// Delete category\n\tpublic delete(categoryId: string): Observable<any> {\n\t\treturn this.crud.deleteData(`/categories/admin/delete/${categoryId}`);\n\t}\n}\n","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../service/crud.service\";\nimport { Observable } from \"rxjs\";\nimport { DeliveryBoyModel } from \"./delivery-boy.component\";\nimport { Http } from '@angular/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n@Injectable()\nexport class DeliveryBoyService {\n    constructor(private crud: CrudService, private http: Http) {\n    }\n\n    // gets dial codes list\n    public getDialCodeList(): Observable<any> {\n        return this.http.get('assets/json/country_codes.json').pipe(map(res => res.json()), catchError(() => of(null)))\n    }\n\n    // Get all delivery Boy\n    public getAll(page: number, limit: number, search?: string): Observable<any> {\n        return this.crud.getData(`/users/admin/delivery-boy/list?page=${page}&limit=${limit}&q=${search}`);\n    }\n\n    // Save delivery Boy\n    public save(deliveryBoy: DeliveryBoyModel): Observable<any> {\n        return this.crud.saveData('/users/admin/delivery-boy/create', deliveryBoy);\n    }\n\n    // Update delivery boy status\n    public updateStatus(deliveryBoyId: string, statusData): Observable<any> {\n        return this.crud.updateData(`/users/admin/delivery-boy/status-update/${deliveryBoyId}`, statusData);\n    }\n}\n","import { POSCartModel } from '../pos/pos.model';\nimport { VariantModel } from '../products/products.model';\nexport interface OrderDetailModel {\n\torder: OrderModel;\n\tcart: CartModel;\n\tdeliveryBoyRating: DeliveryBoyRatingModel;\n}\n\nexport interface POSOrderDetailModel {\n\torder: OrderInfoModel;\n\tcart: CartModel;\n\tdeliveryBoyRating: DeliveryBoyRatingModel;\n}\nexport interface OrderInfoModel {\n\tisOrderAssigned: boolean;\n\tassignedToName: string;\n\tisAcceptedByDeliveryBoy: boolean;\n\tisWalletUsed: boolean;\n\t_id: string;\n\tsubTotal: number;\n\tpaymentStatus: string;\n\ttax: number;\n\ttotalProduct: number;\n\tgrandTotal: number;\n\tdeliveryCharges: number;\n\tcouponCode: string;\n\tcouponAmount: number;\n\taddress: AddressModel;\n\tuser: UserModel;\n\tuserId: string;\n\tpaymentType: string;\n\torderStatus: string;\n\tcartId: string;\n\torderID: number;\n\tdeliveryDate: string;\n\tdeliveryTime: string;\n\tusedWalletAmount: number;\n\tamountRefunded: number;\n\torderFrom: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tproducts: Array<any>;\n\ttransactionDetails: any;\n\tcart: Array<POSCartModel>;\n\tinvoiceToken: string;\n\tcurrencyCode: string;\n\tcurrencySymbol: string;\n\torderType: string;\n}\nexport interface OrderModel {\n\tisOrderAssigned: boolean;\n\tassignedToName: string;\n\tisAcceptedByDeliveryBoy: boolean;\n\tisWalletUsed: boolean;\n\t_id: string;\n\tsubTotal: number;\n\tpaymentStatus: string;\n\ttax: number;\n\ttotalProduct: number;\n\tgrandTotal: number;\n\tdeliveryCharges: number;\n\tcouponCode: string;\n\tcouponAmount: number;\n\taddress: AddressModel;\n\tuser: UserModel;\n\tuserId: string;\n\tpaymentType: string;\n\torderStatus: string;\n\tcartId: string;\n\torderID: number;\n\tdeliveryDate: string;\n\tdeliveryTime: string;\n\tusedWalletAmount: number;\n\tamountRefunded: number;\n\torderFrom: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tproducts: Array<any>;\n\ttransactionDetails: any;\n\tcart: Array<CartProductModel> | Array<POSCartModel>;\n\tinvoiceToken: string;\n\tcurrencyCode: string;\n\tcurrencySymbol: string;\n\torderType: string;\n\tamountRefundedOrderModified: number;\n\tisOrderModified: boolean;\n\tisProductDeleted: boolean;\n\tshippingMethod: string;\n\tisSubscriptionOrder: boolean;\n\tdeliveryInstruction: string;\n}\n\nexport interface CartModel {\n\tproducts: Array<CartProductModel>\n\tproductIds: Array<string>;\n\tcouponAmount: number;\n\twalletAmount: number;\n\tisOrderLinked: boolean;\n\tsubTotal: number;\n\ttax: number;\n\tgrandTotal: number;\n\tdeliveryCharges: number;\n\ttaxInfo: TaxModel;\n\tcouponCode: string;\n\tdeliveryAddress: string;\n\n}\n\nexport interface CartProductModel {\n\tproductId: string;\n\tproductName: string;\n\tunit: string;\n\tprice: number;\n\tquantity: number;\n\tproductTotal: number;\n\timageUrl: number;\n\tfilePath: number;\n\tdealAmount: number;\n\tdealTotalAmount: number;\n\tisDealAvailable: boolean;\n\tisProductDeleted: boolean;\n\tdealPercent: number;\n\toriginalUnit: number;\n\toriginalPrice: number;\n\toriginalQuantity: number;\n\toriginalProductTotal: number;\n\toriginalDealAmount: number;\n\tisOrderModified: boolean;\n\tamountRefundedOrderModified: number;\n}\n\nexport interface EditCartProductModel {\n\tproduct: CartProductModel;\n\tposOrderProduct: POSCartModel;\n\tmodifiedVolume: string;\n\tmodifiedPrice: number;\n\tmodifiedQuantity: number;\n\tmodifiedDealAmount: number;\n\tproductTotal: number;\n}\n\nexport interface TaxModel {\n\ttaxName: string;\n\tamount: number;\n}\n\nexport interface AddressModel {\n\taddress: string;\n\tflatNo: string;\n\tpostalCode: string;\n\taddressType: string;\n\tapartmentName: string;\n\tlandmark: string;\n\tlocation: {\n\t\tlatitude: number;\n\t\tlongitude: number;\n\t};\n}\n\nexport interface UserModel {\n\tfirstName: string;\n\tlastName: string;\n\tmobileNumber: string;\n\temail: string;\n\tcountryCode: string;\n}\n\nexport interface DeliveryBoyRatingModel {\n\trate: number;\n\tdescription: string;\n\torderId: string;\n\tdeliveryBoyId: string;\n\tuserId: string;\n}\n\nexport enum OrderFromEnum {\n\tPOS = 'POS',\n\tMOBILE = 'USER_APP',\n\tWEBSITE = 'WEB_APP'\n}\n\nexport interface AddToCartModel {\n\tproductId: string;\n\tvariant: VariantModel;\n\tquantity: number;\n\tmaximumAmount: number;\n\tproductTotal: number;\n\tdealAmount: number;\n}\n\nexport enum PaymentTypeEnum {\n\tCOD = 'COD',\n\tSTRIPE = 'STRIPE'\n}\n\nexport enum OrderTypesEnum {\n\tPURCHASES = 'PURCHASES',\n\tSUBSCRIPTIONS = 'SUBSCRIPTIONS'\n}","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../service/crud.service\";\nimport { Observable } from \"rxjs\";\n\nexport enum CMS_ROLES {\n\tADMIN = 'ADMIN',\n\tDELIVERY_BOY = 'DELIVERY_BOY'\n}\n\n@Injectable()\nexport class AuthService {\n\tconstructor(private crud: CrudService) {\n\t}\n\n\t// validates admins credentials\n\tpublic validateCredentials(credentials): Observable<any> {\n\t\treturn this.crud.saveData('/users/login', credentials);\n\t}\n\n\t// verifies admin's email and sends OTP to the email\n\tpublic verifyEmail(body): Observable<any> {\n\t\treturn this.crud.saveData('/users/forgot-password', body);\n\t}\n\n\t// verifies OTP entered by admin\n\tpublic verifyOTP(body): Observable<any> {\n\t\treturn this.crud.getData(`/users/verify-otp?email=${body.email}&otp=${body.otp}`);\n\t}\n\n\t// sends request to reset admin's password\n\tpublic resetPassword(passwordData): Observable<any> {\n\t\treturn this.crud.saveData('/users/reset-password', passwordData);\n\t}\n}\n","import { ProductModel, VariantModel } from \"../products/products.model\";\n\nexport interface POSCartModel {\n    productId: string;\n    productTitle: string;\n    productPrice: number;\n    quantity: number;\n    imageUrl: string;\n    filePath: string;\n    dealId: string;\n    dealPercent: number;\n    dealAmount: number;\n    productTotal: number;\n    categoryId: string;\n    subCategoryId: string;\n    unit: string;\n    isDealAvailable: boolean;\n    originalUnit?: number;\n    originalPrice?: number;\n    originalQuantity?: number;\n    originalProductTotal?: number;\n    originalDealAmount?: number;\n    isOrderModified?: boolean;\n    amountRefundedOrderModified?: number;\n    isProductDeleted?: boolean;\n}\n\nexport enum OrderType {\n    DELIVERY = 'DELIVERY',\n    PICK_UP = 'PICK_UP'\n}\n\nexport interface POSOrderModel {\n    cart: Array<POSCartModel>;\n    subTotal: number;\n    tax: number;\n    deliveryCharges: number;\n    grandTotal: number;\n    customerName: string;\n    customerMobileNumber: string;\n    customerEmail: string;\n    deliveryAddress: string;\n    orderType: string;\n    channel: string;\n    paymentType: string;\n    deliverySlotId: string;\n    cashCollected: boolean;\n}\n\nexport enum ChangeQuantityEnum {\n    INCREMENT = 'INCREMENT',\n    DECREMENT = 'DECREMENT'\n}\n\nexport interface SelectedProductModel {\n    variant: VariantModel;\n    quantity: number;\n    product: ProductModel;\n}\n\nexport interface WorkingHoursModel {\n    timings: Array<TimeScheduleModel>;\n    _id: string;\n    isClosed: boolean;\n    date: string;\n}\n\nexport interface TimeScheduleModel {\n    _id: string;\n    slot: string;\n    isClosed: boolean\n}","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../service/crud.service\";\nimport { Observable } from \"rxjs\";\nimport { SubCategoryDataModel } from \"./sub-category.component\";\n\n@Injectable()\nexport class SubCategoryService {\n\tconstructor(private crud: CrudService) {\n\t}\n\n\t// Get all sub category\n\tpublic getAll(page: number, limit: number, search?: string): Observable<any> {\n\t\treturn this.crud.getData(`/sub-categories/admin/list?page=${page}&limit=${limit}&q=${search}`);\n\t}\n\n\t// Get all enabled sub category\n\tpublic getAllEnabled(): Observable<any> {\n\t\treturn this.crud.getData('/sub-categories/list');\n\t}\n\n\t// Get sub category by Id\n\tpublic getById(subCategoryId: string): Observable<any> {\n\t\treturn this.crud.getData(`/sub-categories/admin/detail/${subCategoryId}`);\n\t}\n\n\t// Get all sub category by categoryId\n\tpublic getAllByCategoryId(categoryId: string): Observable<any> {\n\t\treturn this.crud.getData(`/sub-categories/admin/dropdown-list/${categoryId}`);\n\t}\n\n\t// Save sub category\n\tpublic save(subCategory: SubCategoryDataModel): Observable<any> {\n\t\treturn this.crud.saveData('/sub-categories/admin/create', subCategory);\n\t}\n\n\t// Update sub category\n\tpublic update(subCategoryId: string, subCategory: SubCategoryDataModel): Observable<any> {\n\t\treturn this.crud.updateData(`/sub-categories/admin/update/${subCategoryId}`, subCategory);\n\t}\n\n\t// Update sub category status\n\tpublic updateStatus(subCategoryId: string, statusInfo): Observable<any> {\n\t\treturn this.crud.updateData(`/sub-categories/admin/status-update/${subCategoryId}`, statusInfo);\n\t}\n\n\t// Delete sub category\n\tpublic delete(subCategoryId: string): Observable<any> {\n\t\treturn this.crud.deleteData(`/sub-categories/admin/delete/${subCategoryId}`);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { CrudService } from '../../service/crud.service';\nimport { Observable } from \"rxjs\";\nimport { ChangePasswordModel, UserInfoModel } from \"../settings/my-profile/my-profile.component\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    constructor(private crud: CrudService) {\n    }\n\n    // Get all\n    public getAll(page: number, limit: number, search?: string): Observable<any> {\n        return this.crud.getData(`/users/admin/list?page=${page}&limit=${limit}&q=${search}`);\n    };\n\n    // Update status\n    public updateStatus(id: string, statusInfo): Observable<any> {\n        return this.crud.updateData(`/users/admin/status-update/${id}`, statusInfo);\n    }\n\n    // sends push notification to all users\n    public sendNotification(notificationData): Observable<any> {\n        return this.crud.saveData('/users/admin/send/pushnotification/', notificationData);\n    }\n\n    // Get My Profile\n    public getMyProfile(): Observable<any> {\n        return this.crud.getData('/users/me');\n    }\n\n    // Update My Profile\n    public updateMyProfile(profileInfo: UserInfoModel): Observable<any> {\n        return this.crud.updateData('/users/update/profile', profileInfo);\n    }\n\n    // Change password\n    public changePassword(passwordData: ChangePasswordModel): Observable<any> {\n        return this.crud.saveData('/users/change-password', passwordData);\n    }\n\n     // Delete user by userId\n\tpublic delete(userId: string): Observable<any> {\n\t\treturn this.crud.deleteData(`/users/admin/delete/${userId}`)\n\t}\n}\n"],"sourceRoot":"webpack:///"}