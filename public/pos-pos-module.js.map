{"version":3,"sources":["./src/app/pos/pos-orders-details/pos-orders-details.component.ts","./src/app/pos/pos-orders-details/pos-orders-details.component.html","./src/app/pos/pos-orders/pos-orders.component.ts","./src/app/pos/pos-orders/pos-orders.component.html","./src/app/pos/pos-routing.module.ts","./src/app/pos/pos.component.ts","./src/app/pos/pos.component.html","./src/app/pos/pos.module.ts"],"names":[],"mappings":"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","file":"pos-pos-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { UtilService } from '../../../service/util.service';\nimport { OrderService } from '../../orders/order.service';\nimport { OrderFromEnum, POSOrderDetailModel } from '../../orders/orders.model';\nimport { OrderType } from '../pos.model';\n\n@Component({\n\tselector: 'app-pos-orders-details',\n\ttemplateUrl: './pos-orders-details.component.html',\n\tstyleUrls: ['./pos-orders-details.component.scss']\n})\nexport class PosOrdersDetailsComponent implements OnInit {\n\tpublic isLoading = false;\n\tpublic order: POSOrderDetailModel;\n\tprivate orderId: string;\n\tpublic orderTypes = OrderType;\t\t\t// contains list of order types\n\tpublic orderChannels = OrderFromEnum;\t\t\t// contains list of channels\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate orderService: OrderService,\n\t\tprivate utilService: UtilService\n\t) {\n\t\tthis.route.params.subscribe((response: any) => {\n\t\t\tthis.orderId = response.id;\n\t\t\tif (this.orderId) this.getOrderDetail();\n\t\t});\n\t}\n\n\tngOnInit() {\n\t}\n\n\t// gets order details\n\tprivate getOrderDetail(): void {\n\t\tthis.isLoading = true;\n\t\tthis.orderService.getById(this.orderId).subscribe((res: any) => {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.order = res.response_data;\n\t\t}, error => this.isLoading = false);\n\t}\n\n\t// Open order invoice\n\tpublic openInvoice(): void {\n\t\tconst url = `${environment.API_ENDPOINT}/orders/admin/invoice/${this.orderId}?token=${this.order.order.invoiceToken}`;\n\t\twindow.open(url, 'blank');\n\t}\n\n\t// updates payment status\n\tpublic updatePaymentStatus(): void {\n\t\tconst body = {\n\t\t\tcashCollected: true\n\t\t};\n\t\tthis.orderService.updatePaymentStatus(this.orderId, body).subscribe((res: any) => {\n\t\t\tthis.utilService.successMessage(res.response_data);\n\t\t\tthis.getOrderDetail();\n\t\t});\n\t}\n\n}\n","<div class=\"container\" *ngIf=\"order\">\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <h5>{{'POS_ORDERS' | translate}}</h5>\n            <small>\n                <a [routerLink]=\" ['/dashboard'] \">{{'DASHBOARD' | translate}}</a> ->\n                <a [routerLink]=\"['/pos/orders']\"> {{'POS_ORDERS' | translate}}</a>->{{'ORDER_DETAIL' | translate}}\n            </small>\n        </div>\n        <div class=\"col-sm-6 pull-right\" *ngIf=\"(order.order.orderStatus === 'DELIVERED' \n         || order.order.orderStatus === 'CONFIRMED'\n         || order.order.orderStatus === 'PENDING'\n         || order.order.orderStatus === 'OUT_FOR_DELIVERY' \n         || order.order.orderStatus === 'CANCELLED') && order.order.invoiceToken\">\n            <button class=\"btn btn-warning\" (click)=\"openInvoice()\">\n                <em class=\"fa fa-print\"></em>&nbsp;&nbsp;{{'INVOICE' | translate}}\n            </button>\n        </div>\n    </div>\n</div>\n<app-custom-loader *ngIf=\"isLoading\"></app-custom-loader>\n<div class=\"container\" *ngIf=\"order\">\n    <div>\n        <div class=\"panel panel-default\">\n            <div class=\"panel-heading\">{{'ORDER_INFORMATION' | translate}}</div>\n            <div class=\"panel-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <p class=\"lead bb\">{{'DETAILS' | translate}}</p>\n                        <hr>\n                        <form class=\"form-horizontal p-20\">\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'ORDER_ID' | translate}}</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.orderID}}</strong>\n                                        <!-- <strong>{{order.createdAt |  date:'hh:mm'}}</strong> -->\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'PURCHASED_ON' | translate}}</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.createdAt | date:'dd-MMM-yy'}}</strong>\n                                        <!-- <strong>{{order.createdAt |  date:'hh:mm'}}</strong> -->\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'CLIENT_NAME' | translate}}</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.user.firstName}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'ITEMS' | translate}}</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.totalProduct}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'AMOUNT' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.grandTotal |\n                                            currency:order.order.currencyCode:'symbol':'1.2-2'}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'STATUS' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <!-- <span _ngcontent-c12=\"\" class=\"label label-warning ng-star-inserted\">pending</span> -->\n                                        <span\n                                            class=\"label label-warning ng-star-inserted\">{{order.order.orderStatus}}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <ng-container *ngIf=\"order.order.orderType == orderTypes.DELIVERY\">\n                                <div class=\"form-group\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-4\">{{'DELIVERY_DATE' | translate}}:</div>\n                                        <div class=\"col-sm-8\">\n                                            <strong>{{order.order.deliveryDate}}</strong>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-4\">{{'TIME_SLOT' | translate}}:</div>\n                                        <div class=\"col-sm-8\">\n                                            <strong>{{order.order.deliveryTime}}</strong>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-container>\n                            <div class=\"form-group\" *ngIf=\"order.order.orderType == orderTypes.DELIVERY\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'ASSIGNED_TO' | translate}}</div>\n                                    <div class=\"col-sm-8\">\n                                        <!-- <span _ngcontent-c12=\"\" class=\"label label-warning ng-star-inserted\">pending</span> -->\n                                        <span class=\"label label-warning ng-star-inserted\"\n                                            *ngIf=\"order.order.isOrderAssigned && order.order.assignedToName\">{{order.order.assignedToName}}\n                                        </span>\n                                        <span *ngIf=\"order.order.isOrderAssigned && !order.order.assignedToName\">-\n                                        </span>\n                                        <span class=\"text-info\"\n                                            *ngIf=\"!order.order.isOrderAssigned\">{{\"NOT_YET_ASSIGNED\" |\n                                            translate}}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\"\n                                *ngIf=\"order.order.orderType == orderTypes.PICK_UP && order.order.paymentStatus === 'PENDING'\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'CASH_COLLECTED' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"updatePaymentStatus()\"\n                                            translate>UPDATE_PAYMENT_STATUS</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <p class=\"lead bb\">{{'CLIENT' | translate}}</p>\n                        <hr>\n                        <form class=\"form-horizontal p-20\">\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'NAME' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.user.firstName}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'EMAIL' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.user.email || '-'}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'PHONE' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.user.countryCode}}{{order.order.user.mobileNumber}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"order.order.orderType == orderTypes.DELIVERY\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'ADDRESS' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.address.address}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4\" *ngIf=\"order.order.isOrderAssigned\">\n                        <p class=\"lead bb\">{{'DELIVERY_BOY_INFO' | translate}}</p>\n                        <hr>\n                        <form class=\"form-horizontal p-20\">\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'FULL_NAME' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.order.assignedToName}}\n                                        </strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"order.order.address\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'ORDER_RATING' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong class=\"badge badge-success\">{{order.deliveryBoyRating ?\n                                            (order.deliveryBoyRating.rate + '&#x2605;') : '-'}}\n                                            <!-- {{order.deliveryBoyRating.rate ? '&#x2605;': ''}} -->\n                                        </strong>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">{{'COMMENT' | translate}}:</div>\n                                    <div class=\"col-sm-8\">\n                                        <strong>{{order.deliveryBoyRating ? order.deliveryBoyRating.description :\n                                            '-'}}</strong>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n\n                <h6>{{'PAYMENT_DETAILS' | translate}}</h6>\n                <hr>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"row\">\n                            <div class=\"col-md-5\">\n                                <h6>{{'SUB_TOTAL' | translate}}:</h6>\n                                <h6>{{'TAX' | translate}}:</h6>\n                                <h6>{{'DELIVERY_CHARGES' | translate}}:</h6>\n                                <h6>{{'PAYMENT_TYPE' | translate}}:</h6>\n                                <h6>{{'PAYMENT_STATUS' | translate}}:</h6>\n                                <h6>{{'USED_WALLET_AMOUNT' | translate}}:</h6>\n                                <h6>{{'AMOUNT_REFUNDED' | translate}}:</h6>\n                            </div>\n                            <div class=\"col-md-7\">\n                                <h6 class=\"details\">\n                                    {{order.order.subTotal | currency:order.order.currencyCode:'symbol':'1.2-2'}}</h6>\n                                <h6 class=\"details\">{{order.order.tax |\n                                    currency:order.order.currencyCode:'symbol':'1.2-2'}}</h6>\n                                <h6 class=\"details\">\n                                    {{order.order.deliveryCharges ? (order.order.deliveryCharges |\n                                    currency:order.order.currencyCode:'symbol':'1.2-2') : 0}}\n                                </h6>\n                                <h6 class=\"details\">{{order.order.paymentType}}</h6>\n                                <h6 class=\"details\">\n                                    {{order.order.paymentStatus | translate}}\n                                </h6>\n                                <h6 class=\"details\">\n                                    {{order.order.usedWalletAmount |\n                                    currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                </h6>\n                                <h6 class=\"details\">\n                                    {{order.order.amountRefunded | currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                </h6>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"row\">\n                            <div class=\"col-md-5\">\n                                <h6>{{'TOTAL' | translate}}:</h6>\n                                <h6 *ngIf=\"order.order.couponCode\">{{'DISCOUNT' | translate}}:</h6>\n                                <h6>{{'PAY_AMOUNT' | translate}}:</h6>\n                            </div>\n                            <div class=\"col-md-7 payment\">\n                                <h6 class=\"details\">\n                                    {{order.order.grandTotal | currency:order.order.currencyCode:'symbol':'1.2-2'}}</h6>\n                                <h6 class=\"details\" *ngIf=\"order.order.couponCode\">\n                                    {{order.order.couponAmount | currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                </h6>\n                                <h6 class=\"details\">\n                                    {{order.order.grandTotal | currency:order.order.currencyCode:'symbol':'1.2-2'}}</h6>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"panel\" *ngIf=\"order.order.cart\">\n            <div class=\"panel-heading ml-2\">{{'ITEMS_IN_CART' | translate}}</div>\n            <hr>\n            <div class=\"table-responsive\">\n                <table class=\"table table-hover table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-center\">#</th>\n                            <th class=\"text-center\">{{'PRODUCT_NAME' | translate}}</th>\n                            <th class=\"text-center\">{{'PRICE' | translate}}</th>\n                            <th class=\"text-center\">{{'DEAL_OFFER' | translate}}</th>\n                            <th class=\"text-center\">{{'QUANTITY' | translate}}</th>\n                            <th class=\"text-center\">{{'TOTAL' | translate}}</th>\n                            <th class=\"text-center\">{{'PRODUCT_MODIFIED' | translate}}</th>\n                            <th class=\"text-center\">{{'AMOUNT_REFUNDED' | translate}}</th>\n                            <!--                        <th class=\"text-center\">{{'Grand Total' | translate}}</th>-->\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let data of order.order.cart; let i=index \">\n                            <td class=\"text-center\">{{i + 1}}</td>\n                            <td class=\"text-center\"> {{data.productTitle}}</td>\n                            <td class=\"text-center\">\n                                <ng-container *ngIf=\"!data.originalPrice\">\n                                    {{data.productPrice | currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                </ng-container>\n                                <ng-container *ngIf=\"data.originalPrice\">\n                                    {{data.productPrice | currency:order.order.currencyCode:'symbol':'1.2-2'}} <br />\n                                    <span class=\"text-info\">{{\"ORIGINAL_PRICE\" | translate}}: {{data.originalPrice |\n                                        currency:order.order.currencyCode:'symbol':'1.2-2'}}</span>\n                                </ng-container>\n                            </td>\n                            <td class=\"text-center\">\n                                <ng-container *ngIf=\"data.isDealAvailable && !data.originalDealAmount\">\n                                    {{ data.dealAmount | currency:order.order.currencyCode:'symbol':'1.2-2' }}\n                                </ng-container>\n                                <ng-container *ngIf=\"data.isDealAvailable && data.originalDealAmount\">\n                                    {{ data.dealAmount | currency:order.order.currencyCode:'symbol':'1.2-2'\n                                    }}<br />\n                                    <span class=\"text-info\">{{\"ORIGINAL_DEAL_OFFER\" | translate}}:\n                                        {{data.originalDealAmount |\n                                        currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                    </span>\n                                </ng-container>\n                                <ng-container *ngIf=\"!data.isDealAvailable\">\n                                    {{0 | currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                </ng-container>\n                            </td>\n\n                            <td class=\"text-center\">\n                                <ng-container *ngIf=\"!data.originalQuantity\">\n                                    {{ data.quantity }}&nbsp;({{data.unit}})\n                                </ng-container>\n                                <ng-container *ngIf=\"data.originalQuantity\">\n                                    {{ data.quantity }}&nbsp;({{data.unit}})<br />\n                                    <span class=\"text-info\">{{\"ORIGINAL_QUANTITY\" | translate}}:\n                                        {{ data.originalQuantity }}&nbsp;({{data.originalUnit}})\n                                    </span>\n                                </ng-container>\n                            </td>\n                            <td class=\"text-center\">\n                                <ng-container *ngIf=\"!data.originalProductTotal\">\n                                    {{data.productTotal | currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                </ng-container>\n                                <ng-container *ngIf=\"data.originalProductTotal\">\n                                    {{data.productTotal | currency:order.order.currencyCode:'symbol':'1.2-2'}}<br />\n                                    <span class=\"text-info\">{{\"ORIGINAL_TOTAL\" | translate}}:\n                                        {{data.originalProductTotal |\n                                        currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                                    </span>\n                                </ng-container>\n                            </td>\n                            <td class=\"text-center\"> {{data.isOrderModified ? (\"YES\" | translate): (\"NO\" | translate)}}\n                            </td>\n\n                            <td class=\"text-center\">\n                                {{data.amountRefundedOrderModified ? (data.amountRefundedOrderModified |\n                                currency:order.order.currencyCode:'symbol':'1.2-2') : (0 |\n                                currency:order.order.currencyCode:'symbol':'1.2-2')}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"6\"></td>\n                            <td class=\"text-right\">\n                                <strong>{{\"TOTAL\" | translate}} :</strong>\n                            </td>\n                            <td class=\"text-center\">\n                                {{order.order.subTotal | currency:order.order.currencyCode:'symbol':'1.2-2'}}</td>\n                        </tr>\n\n                        <tr>\n                            <td colspan=\"6\"></td>\n                            <td class=\"text-right\">\n                                <strong>{{'TAX' | translate}}:</strong>\n                            </td>\n                            <td class=\"text-center\">\n                                {{order.order.tax | currency:order.order.currencyCode:'symbol':'1.2-2'}}</td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"6\"></td>\n                            <td class=\"text-right\">\n                                <strong>{{'DELIVERY_CHARGES' | translate}}:</strong>\n                            </td>\n                            <td class=\"text-center\">\n                                {{order.order.deliveryCharges ? (order.order.deliveryCharges |\n                                currency:order.order.currencyCode:'symbol':'1.2-2') : (0 |\n                                currency:order.order.currencyCode:'symbol':'1.2-2')}}\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"order.order.couponCode\">\n                            <td colspan=\"6\"></td>\n                            <td class=\"text-right\">\n                                <strong>{{'DISCOUNT' | translate}}:</strong>\n                            </td>\n                            <td class=\"text-center\">\n                                {{order.order.couponAmount | currency:order.order.currencyCode:'symbol':'1.2-2'}}</td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"6\"></td>\n                            <td class=\"text-right\">\n                                <strong>{{'USED_WALLET_AMOUNT' | translate}}:</strong>\n                            </td>\n                            <td class=\"text-center\">\n                                {{order.order.usedWalletAmount | currency:order.order.currencyCode:'symbol':'1.2-2'}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"6\"></td>\n                            <td class=\"text-right\">\n                                <strong> {{'GRAND_TOTAL' | translate}}:</strong>\n                            </td>\n                            <td class=\"text-center\">\n                                <strong>{{order.order.grandTotal |\n                                    currency:order.order.currencyCode:'symbol':'1.2-2'}}</strong>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"panel-footer\">\n                <div class=\"row \">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UtilService } from '../../../service/util.service';\nimport { DeliveryBoyModel } from '../../delivery-boy/delivery-boy.component';\nimport { DeliveryBoyService } from '../../delivery-boy/delivery-boy.service';\nimport { OrderService } from '../../orders/order.service';\nimport { OrderModel } from '../../orders/orders.model';\nimport { SettingService } from '../../settings/setting.service';\nimport { OrderType } from '../pos.model';\n\n@Component({\n\tselector: 'app-pos-orders',\n\ttemplateUrl: './pos-orders.component.html',\n\tstyleUrls: ['./pos-orders.component.scss']\n})\nexport class PosOrdersComponent implements OnInit {\n\tpublic isLoading = false;\n\tpublic orders: Array<OrderModel> = [];\n\tpublic deliveryBoys: Array<DeliveryBoyModel> = [];\n\tpublic page: number = 1;\n\tpublic limit: number = 25;\n\tpublic total: number = 0;\n\tpublic currencySymbol: string = null;\n\tpublic orderId: string = null;\n\tpublic selectedStatus: string = 'All';\n\tpublic assignedToId: string = '';\n\tpublic orderTypes = OrderType;\t\t\t// contains list of order types\n\n\tconstructor(\n\t\tprivate utilService: UtilService,\n\t\tprivate orderService: OrderService,\n\t\tprivate deliveryBoyService: DeliveryBoyService,\n\t\tprivate settingsService: SettingService,\n\t\tprivate route: ActivatedRoute\n\t) {\n\t\tif (this.route.snapshot.params.id) {\n\t\t\tthis.assignedToId = this.route.snapshot.params.id;\n\t\t}\n\t\tthis.getAllOrder();\n\t\tthis.getAllDeliveryBoy();\n\t}\n\n\tngOnInit() {\n\t}\n\n\t// Get all delivery boys\n\tpublic getAllDeliveryBoy(): void {\n\t\tthis.isLoading = true;\n\t\tthis.deliveryBoyService.getAll(0, 100, '').subscribe((res: any) => {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.deliveryBoys = res.response_data || [];\n\t\t}, error => this.isLoading = false);\n\t}\n\n\t// Get all order\n\tprivate getAllOrder(): void {\n\t\tthis.isLoading = true;\n\t\tthis.orderService.getAllPOSOrders(this.page, this.limit, this.selectedStatus, this.assignedToId).subscribe((res: any) => {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.orders = res.response_data || [];\n\t\t\tthis.total = res.total || 0;\n\t\t}, error => this.isLoading = false);\n\t}\n\n\t// Pagination\n\tpublic pageChange(page: number): void {\n\t\tthis.page = page;\n\t\tthis.getAllOrder();\n\t}\n\n\t// Update status\n\tpublic updateStatus(event, Id): void {\n\t\tconst update: any = { orderId: Id, status: event.target.value };\n\t\tthis.isLoading = true;\n\t\tthis.orderService.updateStatus(Id, update).subscribe((res: any) => {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.utilService.successMessage(res.response_data);\n\t\t\tthis.getAllOrder();\n\t\t}, error => this.isLoading = false);\n\t}\n\n\t// Assign order to delivery boy\n\tpublic assignOrder(orderId: string, deliveryBoyId: string): void {\n\t\tconst body = { deliveryBoyId: deliveryBoyId };\n\t\tthis.isLoading = true;\n\t\tthis.orderService.assignOrder(orderId, body).subscribe((res: any) => {\n\t\t\tthis.isLoading = false;\n\t\t\tthis.utilService.successMessage(res.response_data);\n\t\t\tthis.getAllOrder();\n\t\t}, error => this.isLoading = false);\n\t}\n\n\t// Delete order by orderId\n\tpublic deleteOrder(orderId: string): void {\n\t\tif (confirm(this.utilService.getAlertField())) {\n\t\t\tthis.isLoading = true;\n\t\t\tthis.orderService.delete(orderId).subscribe((res: any) => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.utilService.successMessage(res.response_data);\n\t\t\t\tthis.getAllOrder();\n\t\t\t}, error => this.isLoading = false);\n\t\t}\n\t}\n\n\t// Filter order by status\n\tpublic filterByStatus(): void {\n\t\tthis.page = 1;\n\t\tthis.getAllOrder();\n\t}\n\n\t// updates payment status\n\tpublic updatePaymentStatus(orderId: string): void {\n\t\tconst body = {\n\t\t\tcashCollected: true\n\t\t};\n\t\tthis.orderService.updatePaymentStatus(orderId, body).subscribe((res: any) => {\n\t\t\tthis.utilService.successMessage(res.response_data);\n\t\t\tthis.getAllOrder();\n\t\t});\n\t}\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12 text-primary\">\n        <h2 translate>POS_ORDERS</h2>\n    </div>\n    <div class=\"panel panel-default container\">\n        <div class=\"row\">\n            <div class=\"panel-heading col-md-10\">\n                {{ \"ORDER_DETAILS\" | translate }}\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col-md-3\">\n                <select class=\"form-control\" name=\"selectedStatus\" [(ngModel)]=\"selectedStatus\"\n                    (ngModelChange)=\"filterByStatus()\">\n                    <option disabled translate>FILTER_STATUS</option>\n                    <option value=\"All\" translate>ALL</option>\n                    <option value=\"PENDING\">{{ \"PENDING\" | translate }}</option>\n                    <option value=\"CONFIRMED\">{{ \"CONFIRMED\" | translate }}</option>\n                    <option value=\"OUT_FOR_DELIVERY\">\n                        {{ \"OUT_FOR_DELIVERY\" | translate }}\n                    </option>\n                    <option value=\"CANCELLED\">{{ \"CANCELLED\" | translate }}</option>\n                    <option value=\"DELIVERED\">\n                        {{ \"DELIVERED\" | translate | titlecase }}\n                    </option>\n                </select>\n            </div>\n        </div>\n        <app-custom-loader *ngIf=\"isLoading\"></app-custom-loader>\n        <div class=\"table-responsive b0\">\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th class=\"text-center\">\n                            <strong>{{ \"ORDER_ID\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"ORDER_TYPE\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"CLIENT\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"STATUS\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"TOTAL\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"PAYMENT_STATUS\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"ACTION\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"ASSIGN\" | translate }}</strong>\n                        </th>\n                        <th class=\"text-center\">\n                            <strong>{{ \"TIME_SLOT\" | translate }}</strong>\n                        </th>\n\n                        <th class=\"text-center\">\n                            <strong>Edit</strong>\n                        </th>\n\n                        <th class=\"text-center\">\n                            <strong>{{ \"VIEW\" | translate }}</strong>\n                        </th>\n                        <!-- <th class=\"text-center\">\n                            <strong>{{ \"DELETE\" | translate }}</strong>\n                        </th> -->\n                    </tr>\n                </thead>\n                <!-- <tbody>\n            <td colspan=\"12\">\n              <div class=\"no-data mt-2\">\n                <h4 class=\"text-center\">\n                  There is no data to display!\n                </h4>\n              </div>\n            </td>\n          </tbody> -->\n                <tbody>\n                    <tr class=\"text-center\" *ngFor=\"\n                let list of orders\n                  | paginate\n                    : {\n                        itemsPerPage: limit,\n                        currentPage: page,\n                        totalItems: total\n                      };\n                let i = index\n              \">\n                        <td>{{ list.orderID }}</td>\n                        <td>{{ list.orderType | translate }}</td>\n                        <td>{{ list.user ? list.user.firstName : \"\" }}</td>\n                        <td class=\"text-center\">\n                            <span class=\"label label-warning\" [ngClass]=\"\n                    list.orderStatus === 'PENDING'\n                      ? 'label-warning'\n                      : list.orderStatus === 'CONFIRMED'\n                      ? 'label-purple'\n                      : list.orderStatus === 'OUT_FOR_DELIVERY'\n                      ? 'label-onway'\n                      : list.orderStatus === 'DELIVERED'\n                      ? 'label-success'\n                      : 'label-danger'\n                  \">{{ list.orderStatus | translate }}\n                            </span>\n                        </td>\n                        <td>\n                            {{\n                            list.grandTotal | currency: list.currencyCode:\"symbol\":\"1.2-2\"\n                            }}\n                        </td>\n                        <td>{{ list.paymentStatus | translate }}</td>\n\n                        <td class=\"text-center\">\n                            <select class=\"input-sm form-control\" name=\"updatestats\" [ngModel]=\"list.orderStatus\"\n                                (change)=\"updateStatus($event, list._id)\" *ngIf=\"list.orderType != orderTypes.PICK_UP\"\n                                [disabled]=\"list.orderStatus === 'DELIVERED' || list.orderStatus === 'CANCELLED' || list.orderStatus === 'OUT_FOR_DELIVERY'\">\n                                <option disabled>{{ \"SELECT_STATUS\" | translate }}</option>\n                                <option value=\"PENDING\" disabled>\n                                    {{ \"PENDING\" | translate }}\n                                </option>\n                                <option value=\"CONFIRMED\" [disabled]=\"list.orderStatus !== 'PENDING'\">\n                                    {{ \"CONFIRMED\" | translate }}\n                                </option>\n                                <option value=\"OUT_FOR_DELIVERY\" disabled>{{ \"OUT_FOR_DELIVERY\" | translate }}\n                                </option>\n                                <option value=\"DELIVERED\" disabled>\n                                    {{ \"DELIVERED\" | translate }}</option>\n                                <option value=\"CANCELLED\">\n                                    {{ \"CANCELLED\" | translate }}\n                                </option>\n                            </select>\n                            <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"updatePaymentStatus(list._id)\" translate *ngIf=\"list.orderType == orderTypes.PICK_UP && list.paymentStatus === 'PENDING'\">UPDATE_PAYMENT_STATUS</button>\n                        </td>\n                        <td class=\"text-center\">\n                            <select class=\"form-control\"\n                                *ngIf=\"list.orderStatus === 'CONFIRMED' && !list.isOrderAssigned && list.orderType == orderTypes.DELIVERY\"\n                                (change)=\"assignOrder(list._id, $event.target.value)\" ngModel>\n                                <option disabled>\n                                    {{ \"SELECT_DELIVERY_BOY\" | translate }}\n                                </option>\n                                <option *ngFor=\"let boy of deliveryBoys\" [value]=\"boy._id\">\n                                    {{ boy.firstName }}&nbsp;{{ boy.lastName }}\n                                </option>\n                            </select>\n                            <p class=\"text-info\" *ngIf=\"list.isOrderAssigned\">\n                                {{ \"ASSIGNED_TO\" | translate }} {{ list.assignedToName }}\n                            </p>\n                        </td>\n                        <td class=\"text-center\">\n                            <p class=\"text-info\">\n                                {{ list.deliveryTime || '-'}}\n                            </p>\n                            <br />\n                            <p class=\"text-info\">\n                                {{ list.deliveryDate || '-'}}\n                            </p>\n                        </td>\n                        <td class=\"text-center\">\n                            <button class=\"btn btn-raised btn-primary\" [routerLink]=\"['/orders/edit-order',list._id]\"\n                                [disabled]=\"list.orderStatus === 'DELIVERED' || list.orderStatus === 'OUT_FOR_DELIVERY' || list.orderStatus === 'CANCELLED'\"\n                                type=\"button\">\n                                <em _ngcontent-c10=\"\" class=\"fa fa-pencil\"></em>\n                            </button>\n                        </td>\n                        <td class=\"text-center\">\n                            <button class=\"btn btn-raised btn-secondary\"\n                                [routerLink]=\"['/pos/orders/details/' + list._id]\" type=\"button\">\n                                <em _ngcontent-c10=\"\" class=\"fa fa-eye\"></em>\n                            </button>\n                        </td>\n                        <!-- <td>\n                            <button class=\"btn btn-raised btn-danger\" type=\"button\" (click)=\"deleteOrder(list._id)\">\n                                <em class=\"fa fa-trash\"></em>\n                            </button>\n                        </td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"d-flex justify-content-between p-2\" *ngIf=\"total > 0\">\n            <pagination-controls (pageChange)=\"pageChange($event)\"></pagination-controls>\n        </div>\n\n        <div class=\"panel-footer\">\n            <div class=\"row\"></div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PosOrdersDetailsComponent } from './pos-orders-details/pos-orders-details.component';\nimport { PosOrdersComponent } from './pos-orders/pos-orders.component';\nimport { PosComponent } from './pos.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PosComponent,\n        data: {\n            title: 'Pos'\n        }\n    },\n    {\n        path: 'orders',\n        component: PosOrdersComponent\n    },\n    {\n        path: 'orders/details/:id',\n        component: PosOrdersDetailsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PosRoutingModule {\n}\n","import { Component, OnInit, TemplateRef, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { forkJoin } from 'rxjs';\nimport { UtilService } from '../../service/util.service';\nimport { CategoryModel } from '../categories/categories.component';\nimport { CategoryService } from '../categories/category.service';\nimport { OrderService } from '../orders/order.service';\nimport { ProductModel } from '../products/products.model';\nimport { ProductService } from '../products/products.service';\nimport { DeliveryTaxModel } from '../settings/delivey&Tax/delivery-tax.component';\nimport { SettingService } from '../settings/setting.service';\nimport { ChangeQuantityEnum, OrderType, POSCartModel, POSOrderModel, SelectedProductModel, TimeScheduleModel, WorkingHoursModel } from './pos.model';\nimport { debounceTime, distinctUntilChanged, map, filter } from 'rxjs/operators';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-pos',\n  templateUrl: './pos.component.html',\n  styleUrls: ['./pos.component.css']\n})\nexport class PosComponent implements OnInit {\n  public categoryList: Array<CategoryModel> = [];      // contains list of all categories\n  public selectedCategory: CategoryModel;      // contains information of the selected category\n  public page: number = 1;       // contains default page number\n  public limit: number = 20;     // shows 20 records per page\n  public total: number = 0;      // contains total records\n  public productsList: Array<ProductModel> = [];     // contains products list\n  public orderInfo: POSOrderModel;       // contains POS order information\n  public currencyCode: string = null;      // contains currency code\n  public isCheckoutStep: boolean = false;      // shows checkout form when true\n  public changeQuantityTypes = ChangeQuantityEnum;      // contains change quantity types\n  public taxInfo: DeliveryTaxModel;        // contains delivery and tax information\n  public selectedProduct: SelectedProductModel;      // contains information of the selected variant\n  public orderTypes = OrderType;      // contains order types\n  public isLoading: boolean = false;     // disables order button when true\n  public workingHoursData: Array<WorkingHoursModel> = [];        // contains working hours data\n  public slots: Array<TimeScheduleModel> = [];     // contains list of slots available for the selected date\n  public search: string = '';\n  @ViewChild('searchProduct', { static: true }) searchProduct: ElementRef;\n\n\n  constructor(private utilService: UtilService, private router: Router, private categoryService: CategoryService, private productsService: ProductService, private settingService: SettingService, private modalService: NgbModal, private orderService: OrderService) {\n    this.orderInfo = this.getDefaultPOSOrderInfo();\n    this.getCategoryAndCurrencyInfo();\n  }\n\n  ngOnInit(): void {\n    fromEvent(this.searchProduct.nativeElement, 'keyup').pipe(\n      map((event: any) => { return event.target.value; }),\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe((search: string) => {\n      this.page = 1;\n      if (search.length > 2) {\n        this.search = search;\n        this.getAllProductBySearch();\n      } else if (search.length === 0) {\n        this.search = '';\n        this.getProductByCategoryId();\n      }\n      return;\n    });\n  }\n\n  // gets category and currency information\n  private getCategoryAndCurrencyInfo(): void {\n    const category$ = this.categoryService.getAllEnabled();\n    const currency$ = this.settingService.getCurrency();\n    const tax$ = this.settingService.getDeliveryAndTaxInfo();\n    const workingHours$ = this.settingService.getWorkingHourSlots();\n    forkJoin([category$, currency$, tax$, workingHours$]).subscribe((res: any) => {\n      this.categoryList = res[0].response_code === 200 ? res[0].response_data : [];\n      this.currencyCode = res[1].response_code === 200 ? res[1].response_data.currencyCode : 'USD';\n      this.taxInfo = res[2].response_code === 200 ? res[2].response_data : [];\n      this.workingHoursData = res[3].response_code === 200 ? res[3].response_data : [];\n      if (this.categoryList.length > 0) {\n        this.selectedCategory = this.categoryList[0];\n        this.getProductByCategoryId();\n      }\n    });\n  }\n\n  // gets default selected product information\n  private getDefaultSelectedProductInfo(): SelectedProductModel {\n    return {\n      variant: null,\n      quantity: 1,\n      product: null\n    };\n  }\n\n  // get's default POS order data\n  private getDefaultPOSOrderInfo(): POSOrderModel {\n    return {\n      cart: [],\n      subTotal: null,\n      tax: null,\n      deliveryCharges: null,\n      grandTotal: null,\n      customerName: '',\n      customerMobileNumber: '',\n      deliveryAddress: '',\n      orderType: '',\n      paymentType: 'COD',\n      channel: 'POS',\n      customerEmail: '',\n      deliverySlotId: null,\n      cashCollected: true\n    }\n  }\n\n  // resets address and delivery slots\n  public resetAddressData(): void {\n    this.orderInfo.deliveryAddress = null;\n    this.orderInfo.deliverySlotId = null;\n    this.orderInfo.deliveryCharges = null;\n    if (this.orderInfo.orderType == OrderType.PICK_UP) {\n      this.orderInfo.cashCollected = true;\n    } else {\n      this.orderInfo.cashCollected = false;\n    }\n    this.calculateTotal();\n  }\n\n  // gets products by category id\n  private getProductByCategoryId(): void {\n    this.productsService.getPOSProductInfo(this.selectedCategory._id, this.page, this.limit).subscribe((res: any) => {\n      this.productsList = res.response_code === 200 ? res.response_data : [];\n      this.total = res.response_code === 200 ? res.total : 0;\n      this.selectedProduct = this.getDefaultSelectedProductInfo();\n      this.markAllProductItemsInCart();\n    });\n  }\n\n  // called when category is selected \n  public categorySelectionEvent(category: CategoryModel): void {\n    this.selectedCategory = category;\n    this.page = 1;\n    this.getProductByCategoryId();\n  }\n\n  // increments/decrements cart item quantity\n  public changeQuantity(type: string, cartIndex: number): void {\n    switch (type) {\n      case ChangeQuantityEnum.INCREMENT:\n        this.orderInfo.cart[cartIndex].quantity += 1;\n        break;\n      case ChangeQuantityEnum.DECREMENT:\n        if (this.orderInfo.cart[cartIndex].quantity === 1) {\n          this.removeItemFromCart(cartIndex);\n          return;\n        }\n        this.orderInfo.cart[cartIndex].quantity -= 1;\n    }\n    this.calculateTotal();\n  }\n\n  // sets all available slots of the date selected\n  public setSlots(date): void {\n    const workingHourInfo = this.workingHoursData.find(hour => hour._id === date._id);\n    this.slots = workingHourInfo.timings;\n  }\n\n  // marks all cart items as true in product list\n  private markAllProductItemsInCart() {\n    this.orderInfo.cart.forEach(cart => {\n      this.markProductAsAddedToCart(cart.productId, true);\n    });\n  }\n\n  // removes item from cart\n  public removeItemFromCart(cartIndex: number): void {\n    const productId: string = this.orderInfo.cart[cartIndex].productId;\n    this.orderInfo.cart.splice(cartIndex, 1);\n    this.calculateTotal();\n    this.markProductAsAddedToCart(productId, false);\n  }\n\n  // calculate product total\n  private calculateTotal(): void {\n    this.orderInfo.subTotal = 0;\n    this.orderInfo.cart.forEach(product => {\n      product.dealAmount = product.isDealAvailable ? (product.productPrice * product.quantity) * (product.dealPercent / 100) : 0;\n      product.productTotal = product.isDealAvailable ? (product.productPrice * product.quantity) - product.dealAmount : (product.productPrice * product.quantity);\n      this.orderInfo.subTotal += product.productTotal;\n    });\n    this.orderInfo.tax = this.orderInfo.subTotal * (this.taxInfo.taxAmount / 100);\n    this.orderInfo.grandTotal = this.orderInfo.subTotal + this.orderInfo.tax + (this.orderInfo.deliveryCharges ? this.orderInfo.deliveryCharges : 0);\n  }\n\n  // check variant\n  public checkVariant(product: ProductModel, variantModal: TemplateRef<any>): void {\n    this.selectedProduct.product = product;\n    if (this.selectedProduct.product.variant.length === 1) {\n      this.selectedProduct.variant = this.selectedProduct.product.variant[0];\n      this.selectedProduct.quantity = 1;\n      this.addProductToCart();\n    } else {\n      this.modalService.open(variantModal, { backdrop: 'static', keyboard: false });\n    }\n  }\n\n  // adds product to cart\n  public addProductToCart() {\n    const cartInfo: POSCartModel = {\n      productId: this.selectedProduct.product._id,\n      productTitle: this.selectedProduct.product.title,\n      productPrice: Number(this.selectedProduct.variant.price),\n      quantity: this.selectedProduct.quantity,\n      productTotal: Number(this.selectedProduct.variant.price) * this.selectedProduct.quantity,\n      unit: this.selectedProduct.variant.unit,\n      imageUrl: this.selectedProduct.product.productImages && this.selectedProduct.product.productImages.length > 0 ? this.selectedProduct.product.productImages[0].imageUrl : this.selectedProduct.product.imageUrl,\n      filePath: this.selectedProduct.product.productImages && this.selectedProduct.product.productImages.length > 0 ? this.selectedProduct.product.productImages[0].filePath : this.selectedProduct.product.filePath,\n      categoryId: this.selectedProduct.product.categoryId,\n      subCategoryId: this.selectedProduct.product.subCategoryId,\n      dealAmount: 0,\n      isDealAvailable: this.selectedProduct.product.isDealAvailable,\n      dealId: this.selectedProduct.product.dealId || null,\n      dealPercent: this.selectedProduct.product.dealPercent || null,\n    }\n    this.orderInfo.cart.push(cartInfo);\n    this.modalService.dismissAll();\n    this.calculateTotal();\n    this.markProductAsAddedToCart(cartInfo.productId, true);\n    this.selectedProduct = this.getDefaultSelectedProductInfo();\n  }\n\n  // marks product as added to cart\n  public markProductAsAddedToCart(productId: string, status: boolean): void {\n    const productIndex = this.productsList.findIndex(product => product._id === productId);\n    if (productIndex !== -1) {\n      this.productsList[productIndex].isAddedToCart = status;\n    }\n  }\n\n  // toggles cart and payment section\n  public toggleCartSection(): void {\n    this.isCheckoutStep = !this.isCheckoutStep;\n  }\n\n  // closes variant selection modal\n  public closesModal() {\n    this.modalService.dismissAll();\n    this.selectedProduct = this.getDefaultSelectedProductInfo();\n  }\n\n  // places order\n  public placeOrder(): void {\n    this.calculateTotal();\n    this.orderService.placePOSOrder(this.orderInfo).subscribe((res: any) => {\n      if (res.response_code === 200) {\n        this.utilService.successMessage(res.response_data);\n        this.router.navigate(['pos/orders']);\n      } else {\n        this.utilService.errorMessage(res.response_data);\n      }\n    });\n  }\n\n  //get products By search\n  public getAllProductBySearch() {\n    this.productsService.getPOSProductInfoBySearch(this.search, this.page, this.limit).subscribe((res: any) => {\n      this.productsList = (res != null) && (res.response_code === 200) ? res.response_data : [];\n      this.total = res.total || 0;\n    });\n  }\n\n  // Pagination\n  public pageChange(page: number): void {\n    this.page = page;\n    if (this.search.length > 0) {\n      this.getAllProductBySearch();\n    } else {\n      this.getProductByCategoryId();\n    }\n  }\n\n}\n","<div class=\"container\">\n  <br />\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <ul class=\"nav\">\n        <li class=\"nav-item\" *ngFor=\"let category of categoryList\"\n          [ngClass]=\"selectedCategory && selectedCategory._id === category._id ? 'active' : ''\">\n          <a class=\"nav-link show-pointer\" (click)=\"categorySelectionEvent(category)\">{{ category.title }}</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-7\">\n      <div class=\"menu-block\">\n        <h6 class=\"menu-title\">{{ \"MENU\" | translate }}</h6>\n        <div class=\"form-group form-inline\">\n          <input class=\"form-control searchinput filterSearch\" type=\"text\" placeholder=\"{{ 'SEARCH_PLACEHOLDER' | translate }}\" name=\"searchProduct\" #searchProduct />\n        </div>\n\n        <p class=\"text-center text-success\" *ngIf=\"productsList.length === 0\">\n          <b>{{ \"NO_PRODUCTS_FOUND\" | translate }}</b>\n        </p>\n        <div class=\"row mx-0\" *ngIf=\"productsList.length > 0\">\n          <div class=\"col-md-4 show-pointer mt-2 flex-col\" *ngFor=\"let product of productsList\">\n            <div class=\"menu-products\">\n              <div class=\"img-block\">\n                <img\n                  [src]=\"product.productImages && product.productImages.length > 0 ? product.productImages[0].imageUrl : product.imageUrl\" />\n\n                <div class=\"selected-img\" *ngIf=\"product.isAddedToCart\">\n                  <img src=\"assets/img/img/check.png\" />\n                </div>\n              </div>\n\n              <div class=\"row px-3\">\n                <div class=\"col-md-7\">\n                  <h6 class=\"\">\n                    <!-- <span><img src=\"assets/img/img/veg.svg\" /></span> -->\n                    {{ product.title }}\n                  </h6>\n                </div>\n                <div class=\"col-md-5 text-right\">\n                  <h6 class=\"\">{{ product.variant[0].price | currency:currencyCode:'symbol':'1.2-2' }}</h6>\n                </div>\n              </div>\n              <div class=\"row variants mx-1\" *ngIf=\"!product.isAddedToCart\">\n                <div class=\"col-md-12\">\n                  <h6 class=\"text-danger text-center\"\n                    *ngIf=\"product.variant.length === 1 && product.variant[0].productStock === 0\">\n                    <b>{{\"OUT_OF_STOCK\" | translate}}</b>\n                  </h6>\n                  <button class=\"btn w-100 my-3 btn-sm add-btn\" type=\"button\"\n                    (click)=\"checkVariant(product,variantModal)\"\n                    *ngIf=\"(product.variant.length === 1 && product.variant[0].productStock > 0) || product.variant.length > 1\">\n                    {{ \"ADD_TO_CART\" | translate}}\n                    <!-- <span class=\"float-right\">\n                      {{ product.variant[0].price | currency:currencyCode:'symbol':'1.2-2'}}</span> -->\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ngb-pagination class=\"mt-2 col-md-5\" [maxSize]=\"5\" [(page)]=\"page\" [pageSize]=\"limit\" [collectionSize]=\"total\" *ngIf=\"total > 0\" (pageChange)=\"pageChange($event)\">\n      </ngb-pagination>\n    </div>\n\n    <div class=\"col-md-5\">\n      <div class=\"menu-block\" *ngIf=\"!isCheckoutStep\">\n        <h6 class=\"menu-title\">{{ \"CART_ITEMS\" | translate }}</h6>\n        <ng-container>\n          <p class=\"text-success text-center\" *ngIf=\"orderInfo.cart.length === 0\">\n            <b>{{ \"EMPTY_CART_MESSAGE\" | translate}}</b>\n          </p>\n        </ng-container>\n        <ng-container *ngIf=\"orderInfo.cart.length > 0\">\n          <div class=\"row cart-items-block\" *ngFor=\"let item of orderInfo.cart;index as i\">\n            <div class=\"col-md-3 pl-0\">\n              <div class=\"img-blocks\">\n                <img [src]=\"item.imageUrl\" />\n              </div>\n            </div>\n            <div class=\"col-md-9\">\n              <div class=\"row\">\n                <div class=\"col-md-10 p-0\">\n                  <h6 class=\"item-name\">{{ item.productTitle }}&nbsp;({{item.unit}})</h6>\n                </div>\n                <div class=\"col-md-2 text-right\">\n                  <a class=\"show-pointer\" (click)=\"removeItemFromCart(i)\"><img src=\"assets/img/img/close.svg\" /></a>\n                </div>\n              </div>\n\n              <div class=\"row mt-1\">\n                <div class=\"col-md-4\">\n                  <div class=\"row counter-block\">\n                    <a class=\"show-pointer\" (click)=\"changeQuantity(changeQuantityTypes.DECREMENT,i)\"><img\n                        src=\"assets/img/img/minus.png\" /></a>\n                    <h6 class=\"counter\">{{ item.quantity }}</h6>\n                    <a class=\"show-pointer\" (click)=\"changeQuantity(changeQuantityTypes.INCREMENT,i)\"><img\n                        src=\"assets/img/img/plus.png\" /></a>\n                  </div>\n                </div>\n                <div class=\"col-md-8 text-right mt-1\">\n                  <h6 class=\"word-flow\">{{ item.productTotal }}</h6>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ng-container>\n            <div class=\"mx-3\">\n              <hr />\n              <div class=\"row\">\n                <div class=\"col-md-8\">\n                  <h6 class=\"total\">{{ \"SUB_TOTAL\" | translate}}:</h6>\n                </div>\n\n                <div class=\"col-md-4 text-right\">\n                  <h6 class=\"total-price word-flow\">{{orderInfo.subTotal | currency:currencyCode:'symbol':'1.2-2'}}</h6>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-8\">\n                  <h6 class=\"total\">{{ \"TAX\" | translate}}:</h6>\n                </div>\n\n                <div class=\"col-md-4 text-right\">\n                  <h6 class=\"total-price word-flow\">{{orderInfo.tax | currency:currencyCode:'symbol':'1.2-2'}}</h6>\n                </div>\n              </div>\n\n              <hr />\n            </div>\n            <div class=\"total-btn\">\n              <div class=\"row\">\n                <div class=\"col-md-8\">\n                  <h6 class=\"\">{{ \"TOTAL\" | translate}}:</h6>\n                </div>\n\n                <div class=\"col-md-4 text-right\">\n                  <h6 class=\"word-flow total-price\">{{orderInfo.grandTotal | currency:currencyCode:'symbol':'1.2-2'}}\n                  </h6>\n                </div>\n              </div>\n            </div>\n            <div class=\"checkout-block mt-5 mx-3\">\n              <button class=\"btn checkout-btn\" type=\"button\" (click)=\"toggleCartSection()\">\n                <div class=\"row\">\n                  <div class=\"col-md-8 text-left col-8\">\n                    <span class=\"dosis-medium text-med m-0\">{{\"CONTINUE\" | translate}}</span>\n                  </div>\n                  <div class=\"col-md-4 text-right col-4\">\n                    <span class=\"dosis-medium text-med m-0 word-flow\">{{orderInfo.grandTotal |\n                      currency:currencyCode:'symbol':'1.2-2'}}</span>\n                  </div>\n                </div>\n              </button>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n      <br />\n      <div class=\"menu-block\" *ngIf=\"isCheckoutStep\">\n        <h6 class=\"menu-title\">\n          <span>\n            <a class=\"show-pointer\" (click)=\"toggleCartSection()\"><img src=\"assets/img/img/back.svg\" /></a>\n          </span>\n          &nbsp;&nbsp;{{\"PAYMENT\" | translate}}\n        </h6>\n\n        <div class=\"mx-3\">\n          <form (ngSubmit)=\"placeOrder()\" #paymentForm=\"ngForm\">\n            <h6 class=\"mt-1 pt-2\">{{\"ORDER_TYPE\" | translate}}</h6>\n            <div class=\"row my-3\">\n              <div class=\"col-md-6\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" [value]=\"orderTypes.DELIVERY\"\n                    class=\"custom-control-input\" [(ngModel)]=\"orderInfo.orderType\" (change)=\"resetAddressData()\" />\n                  <label class=\"custom-control-label\" for=\"customRadio1\">\n                    {{\"DELIVERY\" | translate}}\n                  </label>\n                </div>\n              </div>\n              <div class=\"col-md-6 text-right\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" [value]=\"orderTypes.PICK_UP\" required\n                    class=\"custom-control-input\" [(ngModel)]=\"orderInfo.orderType\" (change)=\"resetAddressData()\" />\n                  <label class=\"custom-control-label\" for=\"customRadio2\">{{\"PICK_UP\" | translate}}</label>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\" *ngIf=\"orderInfo.orderType == orderTypes.DELIVERY\">\n              <label class=\"text-sm\">{{\"ADDRESS\" | translate}}</label>\n              <input type=\"text\" class=\"form-control custom-form\" name=\"address\" [(ngModel)]=\"orderInfo.deliveryAddress\"\n                required aria-describedby=\"emailHelp\" />\n            </div>\n            <div class=\"form-group\" *ngIf=\"orderInfo.orderType == orderTypes.DELIVERY\">\n              <label class=\"text-sm\">{{\"CHOOSE_DELIVERY_DATE\" | translate}}</label>\n              <!-- <select class=\"form-control\" name=\"deliveryDate\" [(ngModel)]=\"orderInfo.deliveryDate\" (change)=\"setSlots()\">\n                <option *ngFor=\"let hour of workingHoursData\" [value]=\"hour._id\">\n                  {{hour.date}}\n                </option>\n              </select> -->\n              <ng-select [items]=\"workingHoursData\" ngModel [name]=\"'deliveryDate'\" required [bindLabel]=\"'date'\"\n                [bindValue]=\"'_id'\" (change)=\"setSlots($event)\"></ng-select>\n            </div>\n            <div class=\"form-group\" *ngIf=\"orderInfo.orderType == orderTypes.DELIVERY && slots.length > 0\">\n              <label class=\"text-sm\">{{\"CHOOSE_DELIVERY_SLOT\" | translate}}</label>\n              <ng-select [items]=\"slots\" [(ngModel)]=\"orderInfo.deliverySlotId\" [name]=\"'deliverySlotId'\" required\n                [bindLabel]=\"'slot'\" [bindValue]=\"'_id'\"></ng-select>\n              <!-- <select class=\"form-control\" name=\"slot\" [(ngModel)]=\"orderInfo.deliverySlotId\">\n                <option *ngFor=\"let slot of slots\" [value]=\"slot._id\">\n                  {{slot.slot}}\n                </option>\n              </select> -->\n            </div>\n            <div class=\"form-group\" *ngIf=\"orderInfo.orderType == orderTypes.DELIVERY\">\n              <label class=\"text-sm\">{{\"DELIVERY_CHARGES\" | translate}}</label>\n              <input type=\"number\" [min]=\"0\" class=\"form-control custom-form\" name=\"deliveryCharge\"\n                [(ngModel)]=\"orderInfo.deliveryCharges\" required aria-describedby=\"emailHelp\"\n                #deliveryCharge=\"ngModel\" />\n              <span class=\"help-block\" *ngIf=\"deliveryCharge.dirty && deliveryCharge.value < 0\">\n                <small class=\"text-danger\">{{\"INVALID_DELIVERY_CHARGE\" | translate}}</small>\n              </span>\n            </div>\n            <div class=\"form-group\" *ngIf=\"orderInfo.orderType == orderTypes.PICK_UP\">\n              <label class=\"text-sm\">{{\"CASH_COLLECTED\" | translate}}</label>\n              <ng-select [(ngModel)]=\"orderInfo.cashCollected\" [name]=\"'cashCollected'\" required>\n                <ng-option [value]=\"true\">{{ \"YES\" | translate }}</ng-option>\n                <ng-option [value]=\"false\">{{ \"NO\" | translate }}</ng-option>\n              </ng-select>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"text-sm\">{{\"CUSTOMER_NAME\" | translate}}</label>\n              <input type=\"text\" class=\"form-control custom-form\" name=\"customerName\"\n                [(ngModel)]=\"orderInfo.customerName\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div class=\"form-group\">\n              <label class=\"text-sm\">{{\"CUSTOMER_MOBILE_NUMBER\" | translate}}</label>\n              <input type=\"text\" class=\"form-control custom-form\" name=\"mobileNumber\"\n                [(ngModel)]=\"orderInfo.customerMobileNumber\" required aria-describedby=\"emailHelp\" />\n            </div>\n            <div class=\"form-group\">\n              <label class=\"text-sm\">{{\"EMAIL\" | translate}}</label>\n              <input type=\"email\" class=\"form-control custom-form\" name=\"emailId\" [(ngModel)]=\"orderInfo.customerEmail\"\n                aria-describedby=\"emailHelp\" />\n            </div>\n\n            <div class=\"row mt-5\">\n\n              <div class=\"col-md-12\">\n                <button class=\"btn checkout-btn\" type=\"submit\"\n                  [disabled]=\"paymentForm.invalid || isLoading || orderInfo.deliveryCharges < 0\">\n                  Place Order\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #variantModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">{{\"SELECT_VARIANTS\" | translate}}</h4>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <select class=\"form-control\" name=\"variant\" [(ngModel)]=\"selectedProduct.variant\" required>\n        <option *ngFor=\"let variant of selectedProduct.product.variant\" [ngValue]=\"variant\"\n          [disabled]=\"variant.productStock === 0\">{{variant.unit}}\n          ({{variant.price | currency:currencyCode:'symbol':'1.2-2'}}) {{variant.productStock === 0 ? (\"OUT_OF_STOCK\" |\n          translate) :''}}</option>\n      </select>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"closesModal()\">\n      {{\"CANCEL\" | translate}}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addProductToCart()\">\n      {{\"ADD_TO_CART\" | translate}}\n    </button>\n  </div>\n</ng-template>","import { CommonModule } from \"@angular/common\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgbModule, NgbPaginationModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { CrudService } from \"../../service/crud.service\";\nimport { CategoryService } from \"../categories/category.service\";\nimport { CustomLoader } from \"../custom-loader\";\nimport { DeliveryBoyService } from \"../delivery-boy/delivery-boy.service\";\nimport { OrderService } from \"../orders/order.service\";\nimport { ProductService } from \"../products/products.service\";\nimport { SettingService } from \"../settings/setting.service\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { PosOrdersDetailsComponent } from \"./pos-orders-details/pos-orders-details.component\";\nimport { PosOrdersComponent } from \"./pos-orders/pos-orders.component\";\nimport { PosRoutingModule } from \"./pos-routing.module\";\nimport { PosComponent } from \"./pos.component\";\n\n@NgModule({\n  imports: [PosRoutingModule, NgbModule, FormsModule, CommonModule, NgbPaginationModule, TranslateModule.forChild({\n    loader: {\n      provide: TranslateLoader,\n      useClass: CustomLoader,\n      multi: true,\n      deps: [HttpClient, CrudService]\n    }\n  }),\n    NgSelectModule,\n    SharedModule,\n    NgxPaginationModule\n  ],\n  exports: [],\n  declarations: [PosComponent, PosOrdersComponent, PosOrdersDetailsComponent],\n  providers: [CategoryService, ProductService, SettingService, OrderService, DeliveryBoyService],\n})\nexport class PosModule { }\n"],"sourceRoot":"webpack:///"}